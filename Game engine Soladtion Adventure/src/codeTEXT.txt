import java.awt.Canvas;
import java.awt.Graphics;
import java.awt.image.BufferStrategy;
 
 
 private static final long serialVersionUID = -2408406005333728354L;

    private static Thread thread;
    private static boolean running = false;

    public Game(){

    }

    public synchronized static void start(){
        
        thread = new Thread();
        thread.start();
        running = true;
    }

    public synchronized static void stop(){
        try{
            thread.join();
            running = false;
        } catch(Exception e){
            e.printStackTrace();
        }
    }

    public void run() {
        long lastTime = System.nanoTime();
        double anmountOfTicks = 60.0;
        double ns = 1000000000 / anmountOfTicks;
        double delta = 0.0;
        long timer = System.currentTimeMillis();
        int frameWindow = 0;
        while(running){
            long now = System.nanoTime();
            delta += (now - lastTime) / ns;
            lastTime = now;
            while(delta >= 1){
                tick();
                delta--;
            }
            if(running)
              render();
            frameWindow++;

            if(System.currentTimeMillis() - timer > 1000){
                timer += 1000;
                System.out.println("FPS: " + frameWindow);
                frameWindow = 0;
            }
        }
        stop();
    }

    private void render() {

        BufferStrategy bs  = this.getBufferStrategy();
        if(bs == null){
            this.createBufferStrategy(3);
            return;
        }

        Graphics g = bs.getDrawGraphics();

        g.dispose();
        bs.show();
    }

    private void tick() {
    }
